<?xml version="1.0" encoding="UTF-8"?>
<beans default-lazy-init="false"
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:tx="http://www.springframework.org/schema/tx" 
	xmlns:jaxws="http://cxf.apache.org/jaxws"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
									http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
									http://www.springframework.org/schema/context  
						           http://www.springframework.org/schema/context/spring-context-2.5.xsd  
						           http://www.springframework.org/schema/aop  
						           http://www.springframework.org/schema/aop/spring-aop-2.5.xsd  
						           http://www.springframework.org/schema/tx   
						           http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
						           http://cxf.apache.org/jaxws 
    							   http://cxf.apache.org/schemas/jaxws.xsd">
    							   
	<!-- 管理类：配置Schedule信息，与spring容器的生命周期建立联系等功能 -->  
    <bean id="scheduler"  
        class="org.springframework.scheduling.quartz.SchedulerFactoryBean">  
        <property name="dataSource" ref="dataSource-mysql" />
        <!-- 在SchedulerFactoryBean初始化完成后，延迟60秒启动Scheduler，以便让Spring能够更快初始化容器中剩余的Bean。-->   
        <property name="startupDelay" value="${quartz.startupDelay}" />  
        <property name="applicationContextSchedulerContextKey" value="applicationContextKey" />  
        <property name="quartzProperties">  
            <props>  
                <prop key="org.quartz.scheduler.instanceName">DefaultQuartzScheduler</prop>  
                <prop key="org.quartz.scheduler.instanceId">AUTO</prop>  
                <prop key="org.quartz.threadPool.class">org.quartz.simpl.SimpleThreadPool</prop>
                <prop key="org.quartz.threadPool.threadCount">${quartz.threadCount}</prop>  
                <prop key="org.quartz.threadPool.threadPriority">5</prop>  
                <prop key="org.quartz.jobStore.misfireThreshold">5000</prop>  
                <prop key="org.quartz.jobStore.class">org.quartz.impl.jdbcjobstore.JobStoreTX</prop>  
                <prop key="org.quartz.jobStore.driverDelegateClass">org.quartz.impl.jdbcjobstore.StdJDBCDelegate</prop>  
                <prop key="org.quartz.jobStore.tablePrefix">QRTZ_</prop>  
                <prop key="org.quartz.jobStore.isClustered">false</prop>  
                <prop key="org.quartz.jobStore.clusterCheckinInterval">20000</prop>
                <prop key="org.quartz.plugin.shutdownhook.class">org.quartz.plugins.management.ShutdownHookPlugin</prop>
                 <prop key="org.quartz.plugin.shutdownhook.cleanShutdown">true</prop>
                 
                 <!-- 0 String Job 的名称 
				1 String Job 组的名称 
				2 Date 当前日期 
				3 String Trigger 的名称 
				4 String Trigger 组的名称 
				5 Date 调度的触发时间   
				6 Date 调度的下一触发时间 
				7 Integer JobExecutionContext 的触发次数  -->
<!--                  <prop key="org.quartz.plugin.triggHistory.class">org.quartz.plugins.history.LoggingTriggerHistoryPlugin</prop>
                 <prop key="org.quartz.plugin.triggHistory.triggerFiredMessage">Trigger {1}.{0} fired job {6}.{5} at: {4, date, HH:mm:ss MM/dd/yyyy}</prop>
                 <prop key="org.quartz.plugin.triggHistory.triggerCompleteMessage">Trigger {1}.{0} completed firing job {6}.{5} at {4, date, HH:mm:ss MM/dd/yyyy} with resulting trigger instruction code: {9}</prop>
                 <prop key="org.quartz.plugin.triggHistory.triggerMisfiredMessage">Trigger {1}.{0} Misfired firing job {6}.{5} at {4, date, HH:mm:ss MM/dd/yyyy} with resulting trigger instruction code: {9}</prop> -->
                 
<!--                  <prop key="org.quartz.plugin.jobHistory.class">org.quartz.plugins.history.LoggingJobHistoryPlugin</prop>
                 <prop key="org.quartz.plugin.jobHistory.jobToBeFiredMessage">Job {0} is about to be fired at: {2, date, HH:mm:ss MM/dd/yyyy}</prop>
                 <prop key="org.quartz.plugin.jobHistory.jobFailedMessage">Job {0} is failed at: {2, date, HH:mm:ss MM/dd/yyyy}</prop>
                 <prop key="org.quartz.plugin.jobHistory.jobSuccessMessage">Job {0} is success at: {2, date, HH:mm:ss MM/dd/yyyy}</prop>
                 <prop key="org.quartz.plugin.jobHistory.jobWasVetoedMessage">Job {0} was vetoed at: {2, date, HH:mm:ss MM/dd/yyyy}</prop> -->
            </props>  
        </property>
    </bean>
	
	<bean id="quartzManagerService" class="com.fujitsu.manager.quartzManager.serviceImpl.QuartzManagerServiceImpl">  
	    <constructor-arg name ="scheduler"  ref ="scheduler"></constructor-arg>
	</bean>
	
</beans>
